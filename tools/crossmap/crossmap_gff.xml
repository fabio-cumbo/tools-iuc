<tool id="crossmap_gff" name="CrossMap GFF" version="@WRAPPER_VERSION@-0">
    <description>Convert genome coordinates or annotation files between genome assemblies</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_command"/>

    <command><![CDATA[
        CrossMap.py gff
            '${chain_source.input_chain}'
            '${seq_source.input}'

            #if str($include_fails) == "True"
            >
            #end if

            '${output}'
    ]]></command>

    <inputs>
        <conditional name="seq_source">
            <expand macro="source" />

            <when value="cached">
                <param format="gtf,gff,gff3" name="input" type="data" label="GTF/GFF file">
                    <validator type="unspecified_build"/>
                    <!-- Gives error in tests
                    <validator type="dataset_metadata_in_file" filename="liftOver.loc" metadata_name="dbkey" metadata_column="0" message="LiftOver mapping (chain file) is not available for the specified build."/>
                    -->
                </param>
            </when>
            <when value="history">
                <param type="data" format="gtf,gff,gff3" name="input"       label="GTF/GFF file"/>
            </when>
        </conditional>
        <expand macro="chain" />

        <param name="include_fails" type="boolean" truevalue="True" checked="false" falsevalue="False" label="Include failed liftovers" help="If a coordinate can not be lift over, do you want to include it in the output (it is still being marked 'fail')"/>
    </inputs>

    <outputs>
        <!-- GTF/GFF3? test... -->
        <data format="gff" name="output" label="${tool.name} on ${on_string}" />
    </outputs>

    <tests>
    <!-- GFF -->
        <test>
            <param name="input_format" value="gff"/>
            <param name="index_source" value="history"/>
            <param name="input" value="test_gff_01_input_a.gtf" ftype="gtf"/>
            <param name="input_chain" value="aToB.over.chain" ftype="csv"/>
            <param name="include_fails" value="False"/>

            <output name="output" file="test_gff_01_output_a__only-matches.gtf"/>
        </test>
        <test>
            <param name="input_format" value="gff"/>
            <param name="index_source" value="history"/>
            <param name="input" value="test_gff_01_input_a.gtf" ftype="gtf"/>
            <param name="input_chain" value="aToB.over.chain" ftype="csv"/>
            <param name="include_fails" value="True"/>

            <output name="output" file="test_gff_01_output_a__all.gtf"/>
        </test>
    </tests>
    <help><![CDATA[
@HELP_GENERAL@

GFF / GTF
---------
Your input data should be either GTF/GFF2.5 or GFF3 format.

    GFF (General Feature Format) is another plain text file used to describe
    gene structure. GTF (Gene Transfer Format) is a refined version of GTF. The
    first eight fields are the same as GFF. Only chromosome and genome
    coordinates are updated. The format of output is determined from the input.

    NOTE:

    - Each feature (exon, intron, UTR, etc) is processed separately and
      independently, and we do NOT check if features originally belonging to
      the same gene were converted into the same gene.
    - If user want to liftover gene annotation files, use BED12 format.

Please see `the manual <http://crossmap.sourceforge.net/#convert-gff-gtf-format-files>`__ for more details
]]></help>

    <citations>
        <citation type="doi">10.1093/bioinformatics/btt730</citation>
    </citations>
</tool>
